plugins {
    id 'maven-publish'
    id 'io.github.juuxel.loom-quiltflower' version '1.8.+'
    id 'org.quiltmc.loom' version '1.0.+'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/wk.accesswidener")
    runs {
        datagen {
            server()

            name "Minecraft Data"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"

            runDir "build/datagen"
        }
    }
}

sourceSets.main.resources.srcDirs += ['src/main/generated']

repositories {
    maven {
        name = "GeckoLib"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = 'Ladysnake Mods, CCA(Trinkets)'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
        name = "REI"
        url = "https://maven.shedaniel.me/"
    }
    maven {
        name = "Curse"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "Quilt"
        url = "https://maven.quiltmc.org/repository/release"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven {
        url "https://maven.florens.be/releases"
    }

}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings "org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.quilt_mappings}:intermediary-v2"
    modImplementation "org.quiltmc:quilt-loader:${project.quilt_loader}"
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.quilted_fabric_api_version}-${project.minecraft_version}"

    //QSL
    modImplementation "org.quiltmc:qsl:${project.qsl_version}+${project.minecraft_version}"

    //GeckoLib
    modImplementation("software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    //Mod Menu
    modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    //Trinkets
    modImplementation "dev.emi:trinkets:${project.trinkets_version}"

    //REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"

    //MidnightLib
    modImplementation include("maven.modrinth:midnightlib:$midnightlib_version")

    //SmartBrain
    modImplementation include("curse.maven:smartbrainlib-661293:${project.brain_version}")

    //Reach Entity Attributes
    modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:2.3.1")

    //CCA
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")

    //Step Height Attribute
    //modImplementation include("com.github.emilyploszaj:step-height-entity-attribute:${project.step_height_version}")
    modImplementation include("dev.emi:step-height-entity-attribute:${project.step_height_version}")

    //Sodium
    modRuntimeOnly("maven.modrinth:sodium:${project.sodium}")
}

processResources {
    inputs.property "version", version

    filesMatching('quilt.mod.json') {
        expand "version": version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
    }
}