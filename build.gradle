plugins {
    id 'maven-publish'
    alias(libs.plugins.quilt.loom)
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    // maven {
    //     name = "patchouli"
    //     url = "https://maven.blamejared.com"
    // }
    maven { url "https://maven.architectury.dev/" }
    maven {
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Ladysnake Libs"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
    }
    maven {
        name = "Ladysnake Mods"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex '(dev|io\\.github)\\.onyxstudios\\..*'
        }
    }
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        name = "Nexus Repository Manager"
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name "Siphalor's Maven"
        url "https://maven.siphalor.de"
    }
    maven {
        name "impersonate"
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        name "appleskin"
        url "https://maven.ryanliptak.com/"
    }

    maven {
        name = 'Cotton'
        url = 'https://server.bbkr.space/artifactory/libs-release/'
    }

    maven {
        name "ladysnake_mirror"
        url "https://ladysnake.jfrog.io/ui/native/mods"
    }
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
    maven {
        name "reach entity attributes"
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft libs.minecraft
    mappings loom.layered {
        addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2")
        // officialMojangMappings() // Uncomment if you want to use Mojang mappings as your primary mappings, falling back on QM for parameters and Javadocs
    }
    modImplementation libs.quilt.loader

    // QSL is not a complete API; You will need Quilted Fabric API to fill in the gaps.
    // Quilted Fabric API will automatically pull in the correct QSL version.
    modImplementation libs.quilted.fabric.api
    // modImplementation("vazkii.patchouli:Patchouli:${project.patchouli_version}") {
    //     exclude(group: "net.fabricmc.fabric-api")
    // }
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}"

    modImplementation("software.bernie.geckolib:geckolib-quilt-${project.geckolib_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "dev.emi:trinkets:${project.trinkets_version}"

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
//    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modImplementation("io.github.ladysnake:impersonate:${impersonate_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include("io.github.ladysnake:impersonate:${impersonate_version}")
    modImplementation("io.github.ladysnake:PlayerAbilityLib:${playerabilitylib_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("dev.architectury:architectury:${rootProject.architectury_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include("io.github.ladysnake:PlayerAbilityLib:${playerabilitylib_version}")
    modImplementation("com.github.virtuoel:pehkui:${pehkui_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${reach_entity_attributes_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include("com.jamieswhiteshirt:reach-entity-attributes:${reach_entity_attributes_version}")
    modImplementation("com.github.emilyploszaj:step-height-entity-attribute:${step_height_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include("com.github.emilyploszaj:step-height-entity-attribute:${step_height_version}")
    modCompileOnly("squeek.appleskin:appleskin-fabric:${appleskin_version}:api") {
        exclude(group: "net.fabricmc.fabric-api")
        transitive = false
    }

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", version

    filesMatching('quilt.mod.json') {
        expand "version": version
    }
}


tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Still required by IDEs such as Eclipse and Visual Studio Code
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    // If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
    // Uncomment this line to generate them.
    // withJavadocJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}