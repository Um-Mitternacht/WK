plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven {
        url "https://dl.cloudsmith.io/public/klikli-dev/mods/maven/"
        content {
            includeGroup "com.klikli_dev"
        }
    }
    maven {
        url "https://maven2.bai.lol"
        content {
            includeGroup "lol.bai"
            includeGroup "mcp.mobius.waila"
        }
    }
    maven {
        url = "https://www.curseforge.com/api/maven/"
    }
    maven {
        url 'https://libs.azuredoom.com:4443/mods'
    }
    maven {
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
    }
    maven {
        url "https://maven.terraformersmc.com/releases"
    }
    maven {
        url "https://maven.ryanliptak.com"
    }
    maven {
        url "https://maven.shedaniel.me"
    }
    maven {
        url = "https://maven.blamejared.com/"
    }
    maven {
        url = "https://modmaven.dev"
    }
    maven {
        url "https://api.modrinth.com/maven"
    }
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "https://maven.terraformersmc.com/releases"
    }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        url = 'https://maven.ladysnake.org/releases'
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
    }
    maven {
        url "https://maven.architectury.dev/"
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "template-mod" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

    accessWidenerPath = file("src/main/resources/wk.accesswidener")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.klikli_dev:modonomicon-${minecraft_version}-fabric:${modonomicon_version}"
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
    modImplementation "com.github.Virtuoel:Pehkui:${pehkui_version}"
    modCompileOnly "squeek.appleskin:appleskin-fabric:${appleskin_version}:api"
    include modApi("maven.modrinth:impersonate:${impersonate_version}")
    include modApi("maven.modrinth:midnightlib:${midnightlib_version}")
    modImplementation "dev.emi:trinkets:${trinkets_version}"
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-world:${project.cca_version}"
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-scoreboard:${project.cca_version}"
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-chunk:${project.cca_version}"
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-block:${project.cca_version}"
    modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${wthitVersion}"
    modRuntimeOnly "mcp.mobius.waila:wthit:fabric-${wthitVersion}"
    modRuntimeOnly "lol.bai:badpackets:fabric-${badpacketsVersion}"
    modCompileOnlyApi "me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version"
    modCompileOnlyApi "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"
    modCompileOnly("me.shedaniel.cloth:cloth-config-fabric:$cloth_version") {
        // required for making REI integration work
        exclude(group: "net.fabricmc.fabric-api")
    }
    modCompileOnlyApi("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${mc_version}-fabric-api:${jei_version}")
    runtimeOnly("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    modCompileOnlyApi "dev.emi:emi-fabric:${emi_version}:api"
    modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
    include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
    include modApi("me.lucko:fabric-permissions-api:${fabric_permissions_api_version}")
    modImplementation "mod.azure.azurelib:azurelib-fabric-${minecraft_version}:${azurelib_version}"
    modImplementation "net.tslat.smartbrainlib:SmartBrainLib-fabric-1.21:1.14.5"
}

processResources {
    filesMatching("fabric.mod.json") {
        expand(project.properties)
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}